// Alex Bohnson, Jason Wild, Joel Fletcher, Steven Sipes
// 1/28/22
// CS 145
// LAB 2 - Critters

import java.awt.*;

public class Orca extends Critter{

//  This class is used to create Orca critters, and controls their behavior.

    private String appearance;
    private Color currentColor;
    private int redCount;

//  Constructs Orca critter and sets first round initial appearance.

    public Orca() {
        this.appearance = ">O>";
        this.currentColor = Color.CYAN;
    }

//  Returns the dark gray color of the Orca.

    public Color getColor() {
        return currentColor;
    }

//   Returns the current appearance of the Orca.

    public String toString() {
        return appearance;
    }

//      Given the state of the CritterInfo object, determines what the Orca's next move will be. The Orca
//      infects any other critter in front of it. Otherwise, it checks to see if the critter is facing it.
//      If so, it will hop away, otherwise attempt to infect it the next turn. When the Orca is nearby a
//      different critter it "surfaces" by going from CYAN to BLACK. Orcas always win. Go WCC Orcas!

    public Action getMove(CritterInfo info) {
        updateAppearance(info);

        if (info.getFront() == Neighbor.OTHER) {
            currentColor = Color.BLACK;
            return Action.INFECT;
        } else if(info.getLeft() ==  Neighbor.OTHER ){
            currentColor = Color.BLACK;
            if( info.getFront()  == Neighbor.EMPTY && info.getLeftDirection() == Direction.WEST){
                return Action.HOP;
            } else {
                return Action.LEFT;
            }
        } else if(info.getRight() ==  Neighbor.OTHER ){//cheks if critter to left is facing us, if yes, try to hop away otherwise turn to try to infect it next turn
            currentColor = Color.BLACK;
            if (info.getFront()  == Neighbor.EMPTY && info.getRightDirection() == Direction.EAST){
                return Action.HOP;
            } else {
                return Action.RIGHT;
            }
        } else if(info.getBack() ==  Neighbor.OTHER ){//cheks if critter to left is facing us, if yes, try to turn left away otherwise turn to try to infect it next turn
            currentColor = Color.BLACK;
            if( info.getFront()  == Neighbor.EMPTY && info.getBackDirection() == Direction.NORTH){
                return Action.HOP;
            } else {
                return Action.LEFT;
            }
        } else if (info.getFront() == Neighbor.EMPTY){
            return Action.HOP;
        } else {
            return Action.LEFT;
        }
    }

//      Updates the appearance of the Orca to correspond to its current direction and resets
//      color to CYAN.

    private void updateAppearance(CritterInfo info) {
        currentColor = Color.CYAN;

        if(info.getDirection() == Direction.NORTH) {
            appearance = "/O\\";
        } else if(info.getDirection() == Direction.EAST) {
            appearance = ">O>";
        } else if(info.getDirection() == Direction.SOUTH) {
            appearance = "\\O/";
        } else {
            appearance = "<O<";
        }
    }
}
